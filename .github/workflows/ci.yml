name: tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write

jobs:
  deploy:
    name: GitHub Pipeline
    runs-on: macos-15
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Selecting Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      - name: Running Xcode version Is?
        run: /usr/bin/xcodebuild -version
   
      - name: Build Cleanup
        run: |
          xcodebuild clean -project MacClipboard.xcodeproj -scheme MacClipboard | xcpretty
          
      - name: Build Test
        run: |
          xcodebuild test \
            -project MacClipboard.xcodeproj \
            -scheme MacClipboard \
            -destination 'platform=macOS' \
            CODE_SIGN_IDENTITY="-" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            -resultBundlePath TestResults \
            -resultBundleVersion 3 \
            | xcpretty -s --report junit || exit 1
          
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults
          retention-days: 30
          if-no-files-found: error
          
      - name: Check Test Results
        if: always()
        run: |
          if [ -f "TestResults/MacClipboardTests.xctest/TestSummaries.plist" ]; then
            plutil -convert json -o - TestResults/MacClipboardTests.xctest/TestSummaries.plist | jq -r '.TestableSummaries[0].Tests[0].Subtests[0].Subtests[] | select(.TestStatus == "Failure") | "Failed Test: \(.TestName)\nError: \(.TestResultMessages[0].Message)"'
            if [ $? -eq 0 ]; then
              exit 1
            fi
          fi
          